<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>加一</title>
</head>
<body>
<!--给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。
最高位数字存放在数组的首位， 数组中每个元素只存储一个数字。
你可以假设除了整数 0 之外，这个整数不会以零开头。

示例 1:
输入: [1,2,3]
输出: [1,2,4]
解释: 输入数组表示数字 123。
示例 2:
输入: [4,3,2,1]
输出: [4,3,2,2]
解释: 输入数组表示数字 4321。-->

<script>
    //方法一
    /**
     * @param {number[]} digits
     * @return {number[]}
     */
    var plusOne = function(digits) {
       var len=digits.length;
       for (var i=len-1;i>=0;i--){
          if (digits[i]<9){
              digits[i]++;
              return digits;
          }
          digits[i]=0;
       }
        return [1, ...digits];//ES6三点扩展运算符，如果末尾数字是9，则存在进位问题；如果前面位数是9，则需继续向前进位。
        //最后一位是否小于9，如果是，则加一返回；如果是9，则该位置赋值为0，再继续查找前一位，直到查找到第一位，若第一位原本是9，则加一会产生新的一位。
        //查找运算完的第一位是否为0，如果是，则在最前头一位加一个1
    };
</script>

<script>
    //方法二
    var plusOne=function (digits) {
      var i;
      for (i=digits.length-1;i>=0;i--){
           if (digits[i]==9){
               digits[i]=0;
           }else {
               digits[i]++;
               return digits;
           }
      }
      if (i==-1){
           digits.unshift(1);
      }
      return digits;
    }
</script>
</body>
</html>
