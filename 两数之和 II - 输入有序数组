<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>两数之和 II - 输入有序数组</title>
</head>
<body>
<!--给定一个已按照升序排列 的有序数组，找到两个数使得它们相加之和等于目标数。
函数应该返回这两个下标值 index1 和 index2，其中 index1 必须小于 index2。

说明:
返回的下标值（index1 和 index2）不是从零开始的。
你可以假设每个输入只对应唯一的答案，而且你不可以重复使用相同的元素。
示例:
输入: numbers = [2, 7, 11, 15], target = 9
输出: [1,2]
解释: 2 与 7 之和等于目标数 9 。因此 index1 = 1, index2 = 2 。-->

<script>
    /**
     * @param {number[]} numbers
     * @param {number} target
     * @return {number[]}
     */
    //方法一
    var twoSum = function(numbers, target) {
        let left =0,right=numbers.length-1;
        while (left<right){
               if (numbers[left]+numbers[right]===target){
                   let res=[left+1,right+1];
                   return res;
               }else if (numbers[left]+numbers[right]<target) {
                   left+=1;
               }else {
                   right-=1;
               }
        }
        return [];
    };

</script>
<script>
    var twoSum = function(numbers, target) {
        let result = [];
        for (let i = 0; i < numbers.length; i++) {
            let diff = target - numbers[i];
            let left = i + 1;
            let right = numbers.length - 1;
            while (left <= right) {
                let mid = left + Math.floor((right - left) / 2);//Math.floor()向下取整,返回一个表示小于或等于指定数字的最大整数的数字。
                if (diff < numbers[mid]) right = mid - 1;
                else if (diff > numbers[mid]) left = mid + 1;
                else {
                    result.push(i + 1);
                    result.push(mid + 1);
                    break;
                }
            }
        }
        return result;
    };

</script>
</body>
</html>
